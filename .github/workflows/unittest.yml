name: unittest

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  unittest:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        redash-version:
          - 8.0.2.b37747
          # - 9.0.0-beta.b49509  
          - 10.0.0.b50363
          - 10.1.0.b50633

    steps:
      - uses: actions/checkout@v2
      - name: Install Python 3
        uses: actions/setup-python@v1
        with:
          python-version: 3.8
      - name: Install os packages
        run: |
          sudo apt-get install -y xsel xvfb
      - name: Install poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v2
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}
      - name: Install dependencies
        run: poetry install
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
      - name: Install dockerize
        env:
          DOCKERIZE_VERSION: v0.6.1
        run: |
          wget https://github.com/jwilder/dockerize/releases/download/$DOCKERIZE_VERSION/dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz \
          && tar -C /usr/local/bin -xzvf dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz \
          && rm dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz
      - name: Setup docker containers
        env:
            REDASH_VERSION: ${{ matrix.redash-version }}
        working-directory: ./tests/docker/v${{env.REDASH_VERSION}}
        run: |
          docker-compose up -d --remove-orphans
          dockerize -timeout 60s -wait tcp://localhost:5001
      - name: test
        env:
          REDASH_HOST: http://localhost:5001
          REDASH_API_KEY: XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
          REDASH_DS_NAME: MySQL
        run: |
          xvfb-run poetry run python -m unittest discover -s tests/
